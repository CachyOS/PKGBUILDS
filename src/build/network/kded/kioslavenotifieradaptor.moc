/****************************************************************************
** Meta object code from reading C++ file 'kioslavenotifieradaptor.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.12.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "kioslavenotifieradaptor.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'kioslavenotifieradaptor.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.12.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_KioSlaveNotifierAdaptor_t {
    QByteArrayData data[10];
    char stringdata0[548];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_KioSlaveNotifierAdaptor_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_KioSlaveNotifierAdaptor_t qt_meta_stringdata_KioSlaveNotifierAdaptor = {
    {
QT_MOC_LITERAL(0, 0, 23), // "KioSlaveNotifierAdaptor"
QT_MOC_LITERAL(1, 24, 15), // "D-Bus Interface"
QT_MOC_LITERAL(2, 40, 32), // "org.kde.network.KioSlaveNotifier"
QT_MOC_LITERAL(3, 73, 19), // "D-Bus Introspection"
QT_MOC_LITERAL(4, 93, 395), // "  <interface name=\"org.kde.n..."
QT_MOC_LITERAL(5, 454, 18), // "onDirectoryEntered"
QT_MOC_LITERAL(6, 473, 0), // ""
QT_MOC_LITERAL(7, 474, 3), // "dir"
QT_MOC_LITERAL(8, 478, 15), // "onDirectoryLeft"
QT_MOC_LITERAL(9, 494, 18) // "watchedDirectories"

    },
    "KioSlaveNotifierAdaptor\0D-Bus Interface\0"
    "org.kde.network.KioSlaveNotifier\0"
    "D-Bus Introspection\0"
    "  <interface name=\"org.kde.network.KioSlaveNotifier\">\n    <method n"
    "ame=\"watchedDirectories\">\n      <arg direction=\"out\" type=\"as\"/"
    ">\n    </method>\n    <method name=\"onDirectoryEntered\">\n      <arg"
    " direction=\"in\" type=\"s\" name=\"dir\"/>\n    </method>\n    <metho"
    "d name=\"onDirectoryLeft\">\n      <arg direction=\"in\" type=\"s\" na"
    "me=\"dir\"/>\n    </method>\n  </interface>\n\0"
    "onDirectoryEntered\0\0dir\0onDirectoryLeft\0"
    "watchedDirectories"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_KioSlaveNotifierAdaptor[] = {

 // content:
       8,       // revision
       0,       // classname
       2,   14, // classinfo
       3,   18, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // classinfo: key, value
       1,    2,
       3,    4,

 // slots: name, argc, parameters, tag, flags
       5,    1,   33,    6, 0x0a /* Public */,
       8,    1,   36,    6, 0x0a /* Public */,
       9,    0,   39,    6, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void, QMetaType::QString,    7,
    QMetaType::Void, QMetaType::QString,    7,
    QMetaType::QStringList,

       0        // eod
};

void KioSlaveNotifierAdaptor::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        KioSlaveNotifierAdaptor *_t = static_cast<KioSlaveNotifierAdaptor *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->onDirectoryEntered((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 1: _t->onDirectoryLeft((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 2: { QStringList _r = _t->watchedDirectories();
            if (_a[0]) *reinterpret_cast< QStringList*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject KioSlaveNotifierAdaptor::staticMetaObject = { {
    &QDBusAbstractAdaptor::staticMetaObject,
    qt_meta_stringdata_KioSlaveNotifierAdaptor.data,
    qt_meta_data_KioSlaveNotifierAdaptor,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *KioSlaveNotifierAdaptor::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *KioSlaveNotifierAdaptor::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_KioSlaveNotifierAdaptor.stringdata0))
        return static_cast<void*>(this);
    return QDBusAbstractAdaptor::qt_metacast(_clname);
}

int KioSlaveNotifierAdaptor::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractAdaptor::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 3)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 3;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 3)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 3;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
