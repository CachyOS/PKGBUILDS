#define CHECKSUM "e2ac6807b28e74f69a03118c8bc248c7"
static const char fishCode[] =
"#!/usr/bin/perl\n"
"=pod\n"
"This file was transferred by kio_fish, a network client part of the\n"
"KDE project. You may safely delete it, it will be transferred again\n"
"when needed.\n"
"=cut\n"
"use Fcntl;\n"
"$|++;\n"
"#open(DEBUG,\">/tmp/kio_fish.debug.$$.log\");\n"
"if (defined $code) {\n"
"unlink('.fishsrv.pl');\n"
"sysopen(FH,'.fishsrv.pl',O_WRONLY|O_CREAT|O_EXCL);\n"
"print FH $code;\n"
"close(FH);\n"
"chmod(0444,'.fishsrv.pl');\n"
"} elsif ($ARGV[0] ne \"e2ac6807b28e74f69a03118c8bc248c7\") {\n"
"$|=1;\n"
"print \"### 100 transfer fish server\\n\";\n"
"while(<STDIN>) {\n"
"last if /^__END__/;\n"
"$code.=$_;\n"
"}\n"
"exit(eval($code));\n"
"}\n"
"print \"### 200\\n\";\n"
"use strict;\n"
"use POSIX qw(getcwd dup2 strftime);\n"
"$SIG{'CHLD'} = 'IGNORE';\n"
"$| = 1;\n"
"MAIN: while (<STDIN>) {\n"
"chomp;\n"
"chomp;\n"
"next if !length($_) || substr($_,0,1) ne '#';\n"
"#print DEBUG \"$_\\n\";\n"
"s/^#//;\n"
"/^VER / && do {\n"
"print \"VER 0.0.3 copy lscount lslinks lsmime exec stat\\n### 200\\n\";\n"
"next;\n"
"};\n"
"/^PWD$/ && do {\n"
"print getcwd(),\"\\n### 200\\n\";\n"
"next;\n"
"};\n"
"/^SYMLINK\\s+((?:\\\\.|[^\\\\])*?)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $ofn = unquote($1);\n"
"my $fn = unquote($2);\n"
"print (symlink($ofn,$fn)?\"### 200\\n\":\"### 500 $!\\n\");\n"
"next;\n"
"};\n"
"/^COPY\\s+((?:\\\\.|[^\\\\])*?)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $ofn = unquote($1);\n"
"my $fn = unquote($2);\n"
"my ($size) = (stat($ofn))[7];\n"
"my $read = 1;\n"
"if (-l $ofn) {\n"
"my $dest = readlink($ofn);\n"
"unlink($fn);\n"
"symlink($dest,$fn) || ($read = 0);\n"
"} else {\n"
"sysopen(FH,$ofn,O_RDONLY) || do { print \"### 500 $!\\n\"; next; };\n"
"sysopen(OFH,$fn,O_WRONLY|O_CREAT|O_TRUNC) || do { close(FH); print \"### 500 $!\\n\"; next; };\n"
"local $/ = undef;\n"
"my $buffer = '';\n"
"while ($size > 32768 && ($read = sysread(FH,$buffer,32768)) > 0) {\n"
"$size -= $read;\n"
"if (syswrite(OFH,$buffer,$read) != $read) {\n"
"close(FH); close(OFH);\n"
"print \"### 500 $!\\n\";\n"
"next MAIN;\n"
"}\n"
"}\n"
"while ($size > 0 && ($read = sysread(FH,$buffer,$size)) > 0) {\n"
"$size -= $read;\n"
"if (syswrite(OFH,$buffer,$read) != $read) {\n"
"close(FH); close(OFH);\n"
"print \"### 500 $!\\n\";\n"
"next MAIN;\n"
"}\n"
"}\n"
"close(FH);\n"
"close(OFH);\n"
"}\n"
"if ($read > 0) {\n"
"print \"### 200\\n\";\n"
"} else {\n"
"print \"### 500 $!\\n\";\n"
"}\n"
"next;\n"
"};\n"
"/^LINK\\s+((?:\\\\.|[^\\\\])*?)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $ofn = unquote($1);\n"
"my $fn = unquote($2);\n"
"print (link($ofn,$fn)?\"### 200\\n\":\"### 500 $!\\n\");\n"
"next;\n"
"};\n"
"/^RENAME\\s+((?:\\\\.|[^\\\\])*?)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $ofn = unquote($1);\n"
"my $fn = unquote($2);\n"
"print (rename($ofn,$fn)?\"### 200\\n\":\"### 500 $!\\n\");\n"
"next;\n"
"};\n"
"/^CHGRP\\s+(\\d+)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $fn = unquote($2);\n"
"print (chown(-1,int($1),$fn)?\"### 200\\n\":\"### 500 $!\\n\");\n"
"next;\n"
"};\n"
"/^CHOWN\\s+(\\d+)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $fn = unquote($2);\n"
"print (chown(int($1),-1,$fn)?\"### 200\\n\":\"### 500 $!\\n\");\n"
"next;\n"
"};\n"
"/^CHMOD\\s+([0-7]+)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $fn = unquote($2);\n"
"print (chmod(oct($1),$fn)?\"### 200\\n\":\"### 500 $!\\n\");\n"
"next;\n"
"};\n"
"/^DELE\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $fn = unquote($1);\n"
"print (unlink($fn)?\"### 200\\n\":\"### 500 $!\\n\");\n"
"next;\n"
"};\n"
"/^RMD\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $dn = unquote($1);\n"
"print (rmdir($dn)?\"### 200\\n\":\"### 500 $!\\n\");\n"
"next;\n"
"};\n"
"/^MKD\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $dn = unquote($1);\n"
"if (mkdir($dn,0777)) {\n"
"print \"### 200\\n\";\n"
"} else {\n"
"my $err = $!;\n"
"print (chdir($dn)?\"### 501 $err\\n\":\"### 500 $err\\n\");\n"
"}\n"
"next;\n"
"};\n"
"/^CWD\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $dn = unquote($1);\n"
"print (chdir($dn)?\"### 200\\n\":\"### 500 $!\\n\");\n"
"next;\n"
"};\n"
"/^LIST\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"list($1, 1);\n"
"next;\n"
"};\n"
"/^STAT\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"list($1, 0);\n"
"next;\n"
"};\n"
"/^WRITE\\s+(\\d+)\\s+(\\d+)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"write_loop($2,$3,O_WRONLY|O_CREAT,$1);\n"
"next;\n"
"};\n"
"/^APPEND\\s+(\\d+)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"write_loop($1,$2,O_WRONLY|O_APPEND);\n"
"next;\n"
"};\n"
"/^STOR\\s+(\\d+)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"write_loop($1,$2,O_WRONLY|O_CREAT|O_TRUNC);\n"
"next;\n"
"};\n"
"/^RETR\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"read_loop($1);\n"
"next;\n"
"};\n"
"/^READ\\s+(\\d+)\\s+(\\d+)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"read_loop($3,$2,$1);\n"
"next;\n"
"};\n"
"/^EXEC\\s+((?:\\\\.|[^\\\\])*?)\\s+((?:\\\\.|[^\\\\])*?)\\s*$/ && do {\n"
"my $tempfile = unquote($2);\n"
"my $command = unquote($1);\n"
"$command = $command . \";echo \\\"###RESULT: \\$?\\\"\";\n"
"print(\"### 500 $!\\n\"), next\n"
"if (!sysopen(FH,$tempfile,O_CREAT|O_EXCL|O_WRONLY,0600));\n"
"my $pid = fork();\n"
"print(\"### 500 $!\\n\"), next\n"
"if (!defined $pid);\n"
"if ($pid == 0) {\n"
"open(STDOUT,'>>&FH');\n"
"open(STDERR,'>>&FH');\n"
"open(STDIN,'</dev/null'); # not sure here, ms windows anyone?\n"
"exec('/bin/sh','-c',$command);\n"
"print STDERR \"Couldn't exec /bin/sh: $!\\n\";\n"
"exit(255);\n"
"}\n"
"waitpid($pid,0);\n"
"close(FH);\n"
"print \"### 200\\n\";\n"
"next;\n"
"};\n"
"}\n"
"exit(0);\n"
"sub list {\n"
"my $dn = unquote($_[0]);\n"
"my @entries;\n"
"if (!-e $dn) {\n"
"print \"### 404 File does not exist\\n\";\n"
"return;\n"
"} elsif ($_[1] && -d _) {\n"
"opendir(DIR,$dn) || do { print \"### 500 $!\\n\"; return; };\n"
"@entries = readdir(DIR);\n"
"closedir(DIR);\n"
"} else {\n"
"($dn, @entries) = $dn =~ m{(.*)/(.*)};\n"
"$dn = '/' if (!length($dn));\n"
"}\n"
"print scalar(@entries),\"\\n### 100\\n\";\n"
"my $cwd = getcwd();\n"
"chdir($dn) || do { print \"### 500 $!\\n\"; return; };\n"
"foreach (@entries) {\n"
"my $link = readlink;\n"
"my ($mode,$uid,$gid,$size,$mtime) = (lstat)[2,4,5,7,9];\n"
"print filetype($mode,$link,$uid,$gid);\n"
"print \"S$size\\n\";\n"
"print strftime(\"D%Y %m %d %H %M %S\\n\",localtime($mtime));\n"
"print \":$_\\n\";\n"
"print \"L$link\\n\" if defined $link;\n"
"print mimetype($_);\n"
"print \"\\n\";\n"
"}\n"
"chdir($cwd);\n"
"print \"### 200\\n\";\n"
"}\n"
"sub read_loop {\n"
"my $fn = unquote($_[0]);\n"
"my ($size) = ($_[1]?int($_[1]):(stat($fn))[7]);\n"
"my $error = '';\n"
"print \"### 501 Is directory\\n\" and return if -d $fn;\n"
"sysopen(FH,$fn,O_RDONLY) || ($error = $!);\n"
"if ($_[2]) {\n"
"sysseek(FH,int($_[2]),0) || do { close(FH); $error ||= $!; };\n"
"}\n"
"print \"### 500 $error\\n\" and return if $error;\n"
"if (@_ < 2) {\n"
"print \"$size\\n\";\n"
"}\n"
"print \"### 100\\n\";\n"
"my $buffer = '';\n"
"my $read = 1;\n"
"while ($size > 32768 && ($read = sysread(FH,$buffer,32768)) > 0) {\n"
"#print DEBUG \"$size left, $read read\\n\";\n"
"$size -= $read;\n"
"print $buffer;\n"
"}\n"
"while ($size > 0 && ($read = sysread(FH,$buffer,$size)) > 0) {\n"
"#print DEBUG \"$size left, $read read\\n\";\n"
"$size -= $read;\n"
"print $buffer;\n"
"}\n"
"while ($size > 0) {\n"
"print ' ';\n"
"$size--;\n"
"}\n"
"$error ||= $! if $read <= 0;\n"
"close(FH);\n"
"if (!$error) {\n"
"print \"### 200\\n\";\n"
"} else {\n"
"print \"### 500 $error\\n\";\n"
"}\n"
"}\n"
"sub write_loop {\n"
"my $size = int($_[0]);\n"
"my $fn = unquote($_[1]);\n"
"#print DEBUG \"write_loop called $size size, $fn fn, $_[2]\\n\";\n"
"my $error = '';\n"
"sysopen(FH,$fn,$_[2]) || do { print \"### 400 $!\\n\"; return; };\n"
"eval { flock(FH,2); };\n"
"if ($_[3]) {\n"
"sysseek(FH,int($_[3]),0) || do { close(FH);print \"### 400 $!\\n\"; return; };\n"
"}\n"
"<STDIN>;\n"
"print \"### 100\\n\";\n"
"my $buffer = '';\n"
"my $read = 1;\n"
"while ($size > 32768 && ($read = read(STDIN,$buffer,32768)) > 0) {\n"
"#print DEBUG \"$size left, $read read\\n\";\n"
"$size -= $read;\n"
"$error ||= $! if (syswrite(FH,$buffer,$read) != $read);\n"
"}\n"
"while ($size > 0 && ($read = read(STDIN,$buffer,$size)) > 0) {\n"
"#print DEBUG \"$size left, $read read\\n\";\n"
"$size -= $read;\n"
"$error ||= $! if (syswrite(FH,$buffer,$read) != $read);\n"
"}\n"
"close(FH);\n"
"if (!$error) {\n"
"print \"### 200\\n\";\n"
"} else {\n"
"print \"### 500 $error\\n\";\n"
"}\n"
"}\n"
"sub unquote { $_ = shift; s/\\\\(.)/$1/g; return $_; }\n"
"sub filetype {\n"
"my ($mode,$link,$uid,$gid) = @_;\n"
"my $result = 'P';\n"
"while (1) {\n"
"-f _ && do { $result .= '-'; last; };\n"
"-d _ && do { $result .= 'd'; last; };\n"
"defined($link) && do { $result .= 'l'; last; };\n"
"-c _ && do { $result .= 'c'; last; };\n"
"-b _ && do { $result .= 'b'; last; };\n"
"-S _ && do { $result .= 's'; last; };\n"
"-p _ && do { $result .= 'p'; last; };\n"
"$result .= '?'; last;\n"
"}\n"
"$result .= ($mode & 0400?'r':'-');\n"
"$result .= ($mode & 0200?'w':'-');\n"
"$result .= ($mode & 0100?($mode&04000?'s':'x'):($mode&04000?'S':'-'));\n"
"$result .= ($mode & 0040?'r':'-');\n"
"$result .= ($mode & 0020?'w':'-');\n"
"$result .= ($mode & 0010?($mode&02000?'s':'x'):($mode&02000?'S':'-'));\n"
"$result .= ($mode & 0004?'r':'-');\n"
"$result .= ($mode & 0002?'w':'-');\n"
"$result .= ($mode & 0001?($mode&01000?'t':'x'):($mode&01000?'T':'-'));\n"
"$result .= ' ';\n"
"$result .= (getpwuid($uid)||$uid);\n"
"$result .= ':';\n"
"$result .= (getgrgid($gid)||$gid);\n"
"$result .= \"\\n\";\n"
"return $result;\n"
"}\n"
"sub mimetype {\n"
"my $fn = shift;\n"
"return \"Minode/directory\\n\" if -d $fn;\n"
"pipe(IN,OUT);\n"
"my $pid = fork();\n"
"return '' if (!defined $pid);\n"
"if ($pid) {\n"
"close(OUT);\n"
"my $type = <IN>;\n"
"close(IN);\n"
"chomp $type;\n"
"chomp $type;\n"
"$type =~ s/[,; ].*//;\n"
"return '' if ($type !~ m/\\//);\n"
"return \"M$type\\n\"\n"
"}\n"
"close(IN);\n"
"sysopen(NULL,'/dev/null',O_RDWR);\n"
"dup2(fileno(NULL),fileno(STDIN));\n"
"dup2(fileno(OUT),fileno(STDOUT));\n"
"dup2(fileno(NULL),fileno(STDERR));\n"
"exec('/usr/bin/file','-i','-b','-L',$fn);\n"
"exit(0);\n"
"}\n"
"__END__\n"
;
