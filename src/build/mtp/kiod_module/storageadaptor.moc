/****************************************************************************
** Meta object code from reading C++ file 'storageadaptor.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.12.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "storageadaptor.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'storageadaptor.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.12.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_StorageAdaptor_t {
    QByteArrayData data[34];
    char stringdata0[2870];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_StorageAdaptor_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_StorageAdaptor_t qt_meta_stringdata_StorageAdaptor = {
    {
QT_MOC_LITERAL(0, 0, 14), // "StorageAdaptor"
QT_MOC_LITERAL(1, 15, 15), // "D-Bus Interface"
QT_MOC_LITERAL(2, 31, 20), // "org.kde.kmtp.Storage"
QT_MOC_LITERAL(3, 52, 19), // "D-Bus Introspection"
QT_MOC_LITERAL(4, 72, 2429), // "  <interface name=\"org.kde.k..."
QT_MOC_LITERAL(5, 2266, 12), // "copyFinished"
QT_MOC_LITERAL(6, 2279, 0), // ""
QT_MOC_LITERAL(7, 2280, 6), // "result"
QT_MOC_LITERAL(8, 2287, 12), // "copyProgress"
QT_MOC_LITERAL(9, 2300, 16), // "transferredBytes"
QT_MOC_LITERAL(10, 2317, 10), // "totalBytes"
QT_MOC_LITERAL(11, 2328, 9), // "dataReady"
QT_MOC_LITERAL(12, 2338, 4), // "data"
QT_MOC_LITERAL(13, 2343, 12), // "createFolder"
QT_MOC_LITERAL(14, 2356, 4), // "path"
QT_MOC_LITERAL(15, 2361, 12), // "deleteObject"
QT_MOC_LITERAL(16, 2374, 15), // "getFileMetadata"
QT_MOC_LITERAL(17, 2390, 8), // "KMTPFile"
QT_MOC_LITERAL(18, 2399, 23), // "getFileToFileDescriptor"
QT_MOC_LITERAL(19, 2423, 23), // "QDBusUnixFileDescriptor"
QT_MOC_LITERAL(20, 2447, 10), // "descriptor"
QT_MOC_LITERAL(21, 2458, 10), // "sourcePath"
QT_MOC_LITERAL(22, 2469, 16), // "getFileToHandler"
QT_MOC_LITERAL(23, 2486, 18), // "getFilesAndFolders"
QT_MOC_LITERAL(24, 2505, 12), // "KMTPFileList"
QT_MOC_LITERAL(25, 2518, 4), // "int&"
QT_MOC_LITERAL(26, 2523, 6), // "exists"
QT_MOC_LITERAL(27, 2530, 26), // "sendFileFromFileDescriptor"
QT_MOC_LITERAL(28, 2557, 15), // "destinationPath"
QT_MOC_LITERAL(29, 2573, 11), // "setFileName"
QT_MOC_LITERAL(30, 2585, 7), // "newName"
QT_MOC_LITERAL(31, 2593, 11), // "description"
QT_MOC_LITERAL(32, 2605, 16), // "freeSpaceInBytes"
QT_MOC_LITERAL(33, 2622, 11) // "maxCapacity"

    },
    "StorageAdaptor\0D-Bus Interface\0"
    "org.kde.kmtp.Storage\0D-Bus Introspection\0"
    "  <interface name=\"org.kde.kmtp.Storage\">\n    <property access=\"re"
    "ad\" type=\"s\" name=\"description\"/>\n    <property access=\"read\" "
    "type=\"t\" name=\"maxCapacity\"/>\n    <property access=\"read\" type="
    "\"t\" name=\"freeSpaceInBytes\"/>\n    <method name=\"getFilesAndFolde"
    "rs\">\n      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n      <"
    "arg direction=\"out\" type=\"a(uuustxs)\"/>\n      <arg direction=\"ou"
    "t\" type=\"i\" name=\"exists\"/>\n      <annotation value=\"KMTPFileLi"
    "st\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n    </method>\n "
    "   <method name=\"getFileMetadata\">\n      <arg direction=\"in\" type"
    "=\"s\" name=\"path\"/>\n      <arg direction=\"out\" type=\"(uuustxs)\""
    "/>\n      <annotation value=\"KMTPFile\" name=\"org.qtproject.QtDBus.Q"
    "tTypeName.Out0\"/>\n    </method>\n    <method name=\"getFileToHandler"
    "\">\n      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n      <ar"
    "g direction=\"out\" type=\"i\"/>\n    </method>\n    <method name=\"ge"
    "tFileToFileDescriptor\">\n      <arg direction=\"in\" type=\"h\" name="
    "\"descriptor\"/>\n      <arg direction=\"in\" type=\"s\" name=\"source"
    "Path\"/>\n      <arg direction=\"out\" type=\"i\" name=\"result\"/>\n "
    "   </method>\n    <method name=\"sendFileFromFileDescriptor\">\n      "
    "<arg direction=\"in\" type=\"h\" name=\"descriptor\"/>\n      <arg dir"
    "ection=\"in\" type=\"s\" name=\"destinationPath\"/>\n      <arg direct"
    "ion=\"out\" type=\"i\"/>\n    </method>\n    <method name=\"setFileNam"
    "e\">\n      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n      <a"
    "rg direction=\"in\" type=\"s\" name=\"newName\"/>\n      <arg directio"
    "n=\"out\" type=\"i\" name=\"result\"/>\n    </method>\n    <method nam"
    "e=\"createFolder\">\n      <arg direction=\"in\" type=\"s\" name=\"pat"
    "h\"/>\n      <arg direction=\"out\" type=\"u\"/>\n    </method>\n    <"
    "method name=\"deleteObject\">\n      <arg direction=\"in\" type=\"s\" "
    "name=\"path\"/>\n      <arg direction=\"out\" type=\"i\" name=\"result"
    "\"/>\n    </method>\n    <signal name=\"dataReady\">\n      <arg direc"
    "tion=\"out\" type=\"\" name=\"data\"/>\n      <annotation value=\"QByt"
    "eArray\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n    </signal"
    ">\n    <signal name=\"copyProgress\">\n      <arg type=\"t\" name=\"tr"
    "ansferredBytes\"/>\n      <arg type=\"t\" name=\"totalBytes\"/>\n    <"
    "/signal>\n    <signal name=\"copyFinished\">\n      <arg type=\"i\" na"
    "me=\"result\"/>\n    </signal>\n  </interface>\n\0"
    "copyFinished\0\0result\0copyProgress\0"
    "transferredBytes\0totalBytes\0dataReady\0"
    "data\0createFolder\0path\0deleteObject\0"
    "getFileMetadata\0KMTPFile\0"
    "getFileToFileDescriptor\0QDBusUnixFileDescriptor\0"
    "descriptor\0sourcePath\0getFileToHandler\0"
    "getFilesAndFolders\0KMTPFileList\0int&\0"
    "exists\0sendFileFromFileDescriptor\0"
    "destinationPath\0setFileName\0newName\0"
    "description\0freeSpaceInBytes\0maxCapacity"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_StorageAdaptor[] = {

 // content:
       8,       // revision
       0,       // classname
       2,   14, // classinfo
      11,   18, // methods
       3,  116, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       3,       // signalCount

 // classinfo: key, value
       1,    2,
       3,    4,

 // signals: name, argc, parameters, tag, flags
       5,    1,   73,    6, 0x06 /* Public */,
       8,    2,   76,    6, 0x06 /* Public */,
      11,    1,   81,    6, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
      13,    1,   84,    6, 0x0a /* Public */,
      15,    1,   87,    6, 0x0a /* Public */,
      16,    1,   90,    6, 0x0a /* Public */,
      18,    2,   93,    6, 0x0a /* Public */,
      22,    1,   98,    6, 0x0a /* Public */,
      23,    2,  101,    6, 0x0a /* Public */,
      27,    2,  106,    6, 0x0a /* Public */,
      29,    2,  111,    6, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::Int,    7,
    QMetaType::Void, QMetaType::ULongLong, QMetaType::ULongLong,    9,   10,
    QMetaType::Void, QMetaType::QByteArray,   12,

 // slots: parameters
    QMetaType::UInt, QMetaType::QString,   14,
    QMetaType::Int, QMetaType::QString,   14,
    0x80000000 | 17, QMetaType::QString,   14,
    QMetaType::Int, 0x80000000 | 19, QMetaType::QString,   20,   21,
    QMetaType::Int, QMetaType::QString,   14,
    0x80000000 | 24, QMetaType::QString, 0x80000000 | 25,   14,   26,
    QMetaType::Int, 0x80000000 | 19, QMetaType::QString,   20,   28,
    QMetaType::Int, QMetaType::QString, QMetaType::QString,   14,   30,

 // properties: name, type, flags
      31, QMetaType::QString, 0x00095001,
      32, QMetaType::ULongLong, 0x00095001,
      33, QMetaType::ULongLong, 0x00095001,

       0        // eod
};

void StorageAdaptor::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        StorageAdaptor *_t = static_cast<StorageAdaptor *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->copyFinished((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 1: _t->copyProgress((*reinterpret_cast< qulonglong(*)>(_a[1])),(*reinterpret_cast< qulonglong(*)>(_a[2]))); break;
        case 2: _t->dataReady((*reinterpret_cast< const QByteArray(*)>(_a[1]))); break;
        case 3: { uint _r = _t->createFolder((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< uint*>(_a[0]) = std::move(_r); }  break;
        case 4: { int _r = _t->deleteObject((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = std::move(_r); }  break;
        case 5: { KMTPFile _r = _t->getFileMetadata((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< KMTPFile*>(_a[0]) = std::move(_r); }  break;
        case 6: { int _r = _t->getFileToFileDescriptor((*reinterpret_cast< const QDBusUnixFileDescriptor(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = std::move(_r); }  break;
        case 7: { int _r = _t->getFileToHandler((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = std::move(_r); }  break;
        case 8: { KMTPFileList _r = _t->getFilesAndFolders((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< KMTPFileList*>(_a[0]) = std::move(_r); }  break;
        case 9: { int _r = _t->sendFileFromFileDescriptor((*reinterpret_cast< const QDBusUnixFileDescriptor(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = std::move(_r); }  break;
        case 10: { int _r = _t->setFileName((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (StorageAdaptor::*)(int );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&StorageAdaptor::copyFinished)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (StorageAdaptor::*)(qulonglong , qulonglong );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&StorageAdaptor::copyProgress)) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (StorageAdaptor::*)(const QByteArray & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&StorageAdaptor::dataReady)) {
                *result = 2;
                return;
            }
        }
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        StorageAdaptor *_t = static_cast<StorageAdaptor *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< QString*>(_v) = _t->description(); break;
        case 1: *reinterpret_cast< qulonglong*>(_v) = _t->freeSpaceInBytes(); break;
        case 2: *reinterpret_cast< qulonglong*>(_v) = _t->maxCapacity(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
}

QT_INIT_METAOBJECT const QMetaObject StorageAdaptor::staticMetaObject = { {
    &QDBusAbstractAdaptor::staticMetaObject,
    qt_meta_stringdata_StorageAdaptor.data,
    qt_meta_data_StorageAdaptor,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *StorageAdaptor::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *StorageAdaptor::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_StorageAdaptor.stringdata0))
        return static_cast<void*>(this);
    return QDBusAbstractAdaptor::qt_metacast(_clname);
}

int StorageAdaptor::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractAdaptor::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 11)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 11;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 11)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 11;
    }
#ifndef QT_NO_PROPERTIES
   else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 3;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}

// SIGNAL 0
void StorageAdaptor::copyFinished(int _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void StorageAdaptor::copyProgress(qulonglong _t1, qulonglong _t2)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void StorageAdaptor::dataReady(const QByteArray & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
