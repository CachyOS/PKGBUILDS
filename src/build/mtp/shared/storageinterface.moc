/****************************************************************************
** Meta object code from reading C++ file 'storageinterface.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.12.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "storageinterface.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'storageinterface.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.12.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_OrgKdeKmtpStorageInterface_t {
    QByteArrayData data[33];
    char stringdata0[509];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_OrgKdeKmtpStorageInterface_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_OrgKdeKmtpStorageInterface_t qt_meta_stringdata_OrgKdeKmtpStorageInterface = {
    {
QT_MOC_LITERAL(0, 0, 26), // "OrgKdeKmtpStorageInterface"
QT_MOC_LITERAL(1, 27, 12), // "copyFinished"
QT_MOC_LITERAL(2, 40, 0), // ""
QT_MOC_LITERAL(3, 41, 6), // "result"
QT_MOC_LITERAL(4, 48, 12), // "copyProgress"
QT_MOC_LITERAL(5, 61, 16), // "transferredBytes"
QT_MOC_LITERAL(6, 78, 10), // "totalBytes"
QT_MOC_LITERAL(7, 89, 9), // "dataReady"
QT_MOC_LITERAL(8, 99, 4), // "data"
QT_MOC_LITERAL(9, 104, 12), // "createFolder"
QT_MOC_LITERAL(10, 117, 23), // "QDBusPendingReply<uint>"
QT_MOC_LITERAL(11, 141, 4), // "path"
QT_MOC_LITERAL(12, 146, 12), // "deleteObject"
QT_MOC_LITERAL(13, 159, 22), // "QDBusPendingReply<int>"
QT_MOC_LITERAL(14, 182, 15), // "getFileMetadata"
QT_MOC_LITERAL(15, 198, 27), // "QDBusPendingReply<KMTPFile>"
QT_MOC_LITERAL(16, 226, 23), // "getFileToFileDescriptor"
QT_MOC_LITERAL(17, 250, 23), // "QDBusUnixFileDescriptor"
QT_MOC_LITERAL(18, 274, 10), // "descriptor"
QT_MOC_LITERAL(19, 285, 10), // "sourcePath"
QT_MOC_LITERAL(20, 296, 16), // "getFileToHandler"
QT_MOC_LITERAL(21, 313, 18), // "getFilesAndFolders"
QT_MOC_LITERAL(22, 332, 35), // "QDBusPendingReply<KMTPFileLis..."
QT_MOC_LITERAL(23, 368, 24), // "QDBusReply<KMTPFileList>"
QT_MOC_LITERAL(24, 393, 4), // "int&"
QT_MOC_LITERAL(25, 398, 6), // "exists"
QT_MOC_LITERAL(26, 405, 26), // "sendFileFromFileDescriptor"
QT_MOC_LITERAL(27, 432, 15), // "destinationPath"
QT_MOC_LITERAL(28, 448, 11), // "setFileName"
QT_MOC_LITERAL(29, 460, 7), // "newName"
QT_MOC_LITERAL(30, 468, 11), // "description"
QT_MOC_LITERAL(31, 480, 16), // "freeSpaceInBytes"
QT_MOC_LITERAL(32, 497, 11) // "maxCapacity"

    },
    "OrgKdeKmtpStorageInterface\0copyFinished\0"
    "\0result\0copyProgress\0transferredBytes\0"
    "totalBytes\0dataReady\0data\0createFolder\0"
    "QDBusPendingReply<uint>\0path\0deleteObject\0"
    "QDBusPendingReply<int>\0getFileMetadata\0"
    "QDBusPendingReply<KMTPFile>\0"
    "getFileToFileDescriptor\0QDBusUnixFileDescriptor\0"
    "descriptor\0sourcePath\0getFileToHandler\0"
    "getFilesAndFolders\0"
    "QDBusPendingReply<KMTPFileList,int>\0"
    "QDBusReply<KMTPFileList>\0int&\0exists\0"
    "sendFileFromFileDescriptor\0destinationPath\0"
    "setFileName\0newName\0description\0"
    "freeSpaceInBytes\0maxCapacity"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_OrgKdeKmtpStorageInterface[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      12,   14, // methods
       3,  120, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       3,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   74,    2, 0x06 /* Public */,
       4,    2,   77,    2, 0x06 /* Public */,
       7,    1,   82,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       9,    1,   85,    2, 0x0a /* Public */,
      12,    1,   88,    2, 0x0a /* Public */,
      14,    1,   91,    2, 0x0a /* Public */,
      16,    2,   94,    2, 0x0a /* Public */,
      20,    1,   99,    2, 0x0a /* Public */,
      21,    1,  102,    2, 0x0a /* Public */,
      21,    2,  105,    2, 0x0a /* Public */,
      26,    2,  110,    2, 0x0a /* Public */,
      28,    2,  115,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::Int,    3,
    QMetaType::Void, QMetaType::ULongLong, QMetaType::ULongLong,    5,    6,
    QMetaType::Void, QMetaType::QByteArray,    8,

 // slots: parameters
    0x80000000 | 10, QMetaType::QString,   11,
    0x80000000 | 13, QMetaType::QString,   11,
    0x80000000 | 15, QMetaType::QString,   11,
    0x80000000 | 13, 0x80000000 | 17, QMetaType::QString,   18,   19,
    0x80000000 | 13, QMetaType::QString,   11,
    0x80000000 | 22, QMetaType::QString,   11,
    0x80000000 | 23, QMetaType::QString, 0x80000000 | 24,   11,   25,
    0x80000000 | 13, 0x80000000 | 17, QMetaType::QString,   18,   27,
    0x80000000 | 13, QMetaType::QString, QMetaType::QString,   11,   29,

 // properties: name, type, flags
      30, QMetaType::QString, 0x00095001,
      31, QMetaType::ULongLong, 0x00095001,
      32, QMetaType::ULongLong, 0x00095001,

       0        // eod
};

void OrgKdeKmtpStorageInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        OrgKdeKmtpStorageInterface *_t = static_cast<OrgKdeKmtpStorageInterface *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->copyFinished((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 1: _t->copyProgress((*reinterpret_cast< qulonglong(*)>(_a[1])),(*reinterpret_cast< qulonglong(*)>(_a[2]))); break;
        case 2: _t->dataReady((*reinterpret_cast< const QByteArray(*)>(_a[1]))); break;
        case 3: { QDBusPendingReply<uint> _r = _t->createFolder((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<uint>*>(_a[0]) = std::move(_r); }  break;
        case 4: { QDBusPendingReply<int> _r = _t->deleteObject((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 5: { QDBusPendingReply<KMTPFile> _r = _t->getFileMetadata((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<KMTPFile>*>(_a[0]) = std::move(_r); }  break;
        case 6: { QDBusPendingReply<int> _r = _t->getFileToFileDescriptor((*reinterpret_cast< const QDBusUnixFileDescriptor(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 7: { QDBusPendingReply<int> _r = _t->getFileToHandler((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 8: { QDBusPendingReply<KMTPFileList,int> _r = _t->getFilesAndFolders((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<KMTPFileList,int>*>(_a[0]) = std::move(_r); }  break;
        case 9: { QDBusReply<KMTPFileList> _r = _t->getFilesAndFolders((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusReply<KMTPFileList>*>(_a[0]) = std::move(_r); }  break;
        case 10: { QDBusPendingReply<int> _r = _t->sendFileFromFileDescriptor((*reinterpret_cast< const QDBusUnixFileDescriptor(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 11: { QDBusPendingReply<int> _r = _t->setFileName((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (OrgKdeKmtpStorageInterface::*)(int );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKmtpStorageInterface::copyFinished)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (OrgKdeKmtpStorageInterface::*)(qulonglong , qulonglong );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKmtpStorageInterface::copyProgress)) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (OrgKdeKmtpStorageInterface::*)(const QByteArray & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKmtpStorageInterface::dataReady)) {
                *result = 2;
                return;
            }
        }
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        OrgKdeKmtpStorageInterface *_t = static_cast<OrgKdeKmtpStorageInterface *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< QString*>(_v) = _t->description(); break;
        case 1: *reinterpret_cast< qulonglong*>(_v) = _t->freeSpaceInBytes(); break;
        case 2: *reinterpret_cast< qulonglong*>(_v) = _t->maxCapacity(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
}

QT_INIT_METAOBJECT const QMetaObject OrgKdeKmtpStorageInterface::staticMetaObject = { {
    &QDBusAbstractInterface::staticMetaObject,
    qt_meta_stringdata_OrgKdeKmtpStorageInterface.data,
    qt_meta_data_OrgKdeKmtpStorageInterface,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *OrgKdeKmtpStorageInterface::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *OrgKdeKmtpStorageInterface::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_OrgKdeKmtpStorageInterface.stringdata0))
        return static_cast<void*>(this);
    return QDBusAbstractInterface::qt_metacast(_clname);
}

int OrgKdeKmtpStorageInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractInterface::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 12)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 12;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 12)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 12;
    }
#ifndef QT_NO_PROPERTIES
   else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 3;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}

// SIGNAL 0
void OrgKdeKmtpStorageInterface::copyFinished(int _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void OrgKdeKmtpStorageInterface::copyProgress(qulonglong _t1, qulonglong _t2)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void OrgKdeKmtpStorageInterface::dataReady(const QByteArray & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
