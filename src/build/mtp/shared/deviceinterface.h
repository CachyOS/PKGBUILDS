/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -p deviceinterface /home/pb/builds/KDE/KDE-Apps/kio-extras/src/kio-extras-18.12.0/mtp/shared/org.kde.kmtp.device.xml
 *
 * qdbusxml2cpp is Copyright (C) 2018 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DEVICEINTERFACE_H
#define DEVICEINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.kde.kmtp.Device
 */
class OrgKdeKmtpDeviceInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.kmtp.Device"; }

public:
    OrgKdeKmtpDeviceInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgKdeKmtpDeviceInterface();

    Q_PROPERTY(QString friendlyName READ friendlyName)
    inline QString friendlyName() const
    { return qvariant_cast< QString >(property("friendlyName")); }

    Q_PROPERTY(QString udi READ udi)
    inline QString udi() const
    { return qvariant_cast< QString >(property("udi")); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QList<QDBusObjectPath> > listStorages()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("listStorages"), argumentList);
    }

    inline QDBusPendingReply<int> setFriendlyName(const QString &newName)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(newName);
        return asyncCallWithArgumentList(QStringLiteral("setFriendlyName"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace kde {
    namespace kmtp {
      typedef ::OrgKdeKmtpDeviceInterface Device;
    }
  }
}
#endif
