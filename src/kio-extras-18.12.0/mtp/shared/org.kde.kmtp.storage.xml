<!DOCTYPE node PUBLIC
"-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">

<!--
    This file is part of the KMTP framework, part of the KDE project.

    Copyright (C) 2018 Andreas Krutzler <andreas.krutzler@gmx.net>

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) version 3, or any
    later version accepted by the membership of KDE e.V. (or its
    successor approved by the membership of KDE e.V.), which shall
    act as a proxy defined in Section 6 of version 3 of the license.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library. If not, see <http://www.gnu.org/licenses/>.
-->

<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">

    <!-- org.kde.kmtp.Storage:
    @short_description: MTP file, folder and object access API

    This D-Bus interface is used to access MTP files, folders and objects.
    -->
    <interface name="org.kde.kmtp.Storage">

        <!-- description: A brief description of this storage.
        -->
        <property name="description" type="s" access="read"/>
        <property name="maxCapacity" type="t" access="read"/>
        <property name="freeSpaceInBytes" type="t" access="read"/>

        <!-- getFilesAndFolders
        -->
        <method name="getFilesAndFolders">
            <arg direction="in" type="s" name="path"/>
            <arg direction="out" type="a(uuustxs)"/>
            <arg direction="out" type="i" name="exists"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="KMTPFileList"/>
        </method>

        <!-- getFileMetadata
        -->
        <method name="getFileMetadata">
            <arg direction="in" type="s" name="path"/>
            <arg direction="out" type="(uuustxs)"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="KMTPFile"/>
        </method>

        <!-- getFileToHandler: TODO.
        -->
        <method name="getFileToHandler">
            <arg direction="in" type="s" name="path"/>
            <arg direction="out" type="i"/>
        </method>

        <!-- getFileToFileDescriptor: Gets a file from the device to a local file.
        @descriptor:      The unix file descriptor to copy to
        @sourcePath:      Filepath on the device
        @result:	       The result of the operation. 0 if successful, else not.

        This method will return immediately and emits the copyFinished signal when everything is done.
        To track the progress of the operation use the copyProgress signal.
        NOTE: The copyFinished and copyProgress signals are just emitted if @result is 0.
        -->
        <method name="getFileToFileDescriptor">
            <arg direction="in" type="h" name="descriptor"/>
            <arg direction="in" type="s" name="sourcePath"/>
            <arg direction="out" type="i" name="result"/>
        </method>

        <!-- sendFileFromFileDescriptor: Sends a local file to a device by its unix file descriptor.
        @descriptor:      The unix file descriptor to copy from
        @destinationPath: Filepath on the device
        @result:	       The result of the operation. 0 if successful, else not.

        This method will return immediately and emits the copyFinished signal when everything is done.
        To track the progress of the operation use the copyProgress signal.
        NOTE: The copyFinished and copyProgress signals are just emitted if @result is 0.
        -->
        <method name="sendFileFromFileDescriptor">
            <arg direction="in" type="h" name="descriptor"/>
            <arg direction="in" type="s" name="destinationPath"/>
            <arg direction="out" type="i"/>
        </method>

        <!--
        setFileName
        @path:	        The path of the file.
        @newName:	The new name of the file
        @result:	The result of the operation. 0 if successful, else not.
        -->
        <method name="setFileName">
            <arg direction="in"  type="s" name="path" />
            <arg direction="in"  type="s" name="newName" />
            <arg direction="out" type="i" name="result" />
        </method>

        <!--
        createFolder
        @path:	             The path of the new folder
        @result:             The result of the operation. 0 if successful, else not.
        -->
        <method name="createFolder">
            <arg direction="in" type="s" name="path"/>
            <arg direction="out" type="u"/>
        </method>

        <!--
        deleteObject
        @path:	 The path of the object.
        @result: The result of the operation. 0 if successful, else not.
        -->
        <method name="deleteObject">
            <arg direction="in" type="s" name="path"/>
            <arg direction="out" type="i" name="result" />
        </method>

        <!-- dataReady: TODO.
        -->
        <signal name="dataReady">
            <arg direction="out" name="data"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QByteArray"/>
        </signal>

        <!--
        copyProgress: Signal is emitted when a progress update has been issued by LIBMTP. Applies only to copy operations.
        @transferredBytes:  Currently transferred bytes
        @totalBytes:	    Total number of bytes to transfer
        -->
        <signal name="copyProgress">
            <arg type="t" name="transferredBytes"/>
            <arg type="t" name="totalBytes"/>
        </signal>

        <!--
        copyFinished: Signal is emitted when a copy operation has finished.
        @result:	    The result of the operation. 0 if successful, else not.
        -->
        <signal name="copyFinished">
            <arg type="i" name="result"/>
        </signal>

    </interface>
</node>
