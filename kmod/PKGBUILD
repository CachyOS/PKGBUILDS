# Maintainer: Dave Reisner <dreisner@archlinux.org>

pkgname=kmod
pkgver=29
pkgrel=2.3
pkgdesc="Linux kernel module management tools and library"
arch=('x86_64')
url='https://git.kernel.org/pub/scm/utils/kernel/kmod/kmod.git'
license=('GPL2')
depends=('glibc' 'zlib' 'openssl' 'xz' 'zstd')
checkdepends=('linux-headers' 'libelf')
options=('strip' 'debug')
provides=('module-init-tools=3.16' 'libkmod.so')
conflicts=('module-init-tools')
replaces=('module-init-tools')
validpgpkeys=('EAB33C9690013C733916AC839BA2A5A630CBEA53')  # Lucas DeMarchi
source=("https://www.kernel.org/pub/linux/utils/kernel/$pkgname/$pkgname-$pkgver.tar."{xz,sign}
        '0001-libkmod-module-check-new_from_name-return-value-in-g.patch'
        '0002-libkmod-add-a-library-notice-log-level-print.patch'
        "0003-libkmod-Set-builtin-to-no-when-module-is-created-fro.patch"
        "0004-libkmod-Prefer-builtin-index-over-builtin.alias.patch"
        "0005-depmod-Do-not-duplicate-builtin-index.patch"
        "0006-depmod-Stop-opening-modules.modinfo-once-per-module.patch"
        "0007-test-initstate-Check-for-negative-value-on-error.patch"
        "0008-libkmod-module-Fix-return-code-for-kmod_module_new_f.patch"
        "0009-libkmod-Add-helper-function-to-iterate-lookup-option.patch"
        "0010-libkmod-Update-docs-about-indexes-order.patch"
        "0011-libkmod-Add-lookup-from-module-name.patch"
        "0012-modinfo-Update-help-message-with-modulename.patch"
        "0013-modinfo-Allow-to-force-arg-as-module-name.patch"
        "0014-libkmod-Fix-use-of-sizeof-instead-of-ARRAY_SIZE.patch"
        "0015-docs-Add-missing-functions-to-documentation.patch"
        'depmod-search.conf'
        'depmod.hook' 'depmod.script')
md5sums=('e81e63acd80697d001c8d85c1acb38a0'
         'SKIP'
         '8a2f8e8182669581ef13f0815da68b73'
         'd8eda46644b50480ab717be268fb519c'
         'bfd1f2ec9d09590fae614eb91e909c31'
         '1feb29e1c9bccae0f9877a711d0f64ca'
         'ab9ddb8c16020c88084d022ba171ec06'
         'e2511b86bba4945cabdd5264ad4207ba'
         '2e8166f84522d8887ffbf699ddf34d8a'
         'c2de5599324e4201f2e95b98789252f9'
         '32cfa655ac8dd8b1113951d54c754b69'
         'c95687d31126754ffa317c812fad46e9'
         'b4513020eaee467f3a173e086e6d7b24'
         'c3c364525d20744a59e1f4dc5f10927a'
         'de40c12ccc1049e8020eb31c1c4bd823'
         '45818b2a7c4f8c4c33ecf0c74990868a'
         '4f23e3be0a6c012b09d796c713746e57'
         'dd62cbf62bd8f212f51ef8c43bec9a77'
         'e179ace75721e92b04b2e145b69dab29'
         '18fb3d1f6024a5a84514c8276cb3ebff')

prepare() {
  cd $pkgname-$pkgver

  local src
   for src in "${source[@]}"; do
     src="${src%%::*}"
     src="${src##*/}"
     [[ $src = *.patch ]] || continue
     echo "Applying patch $src..."
     patch -Np1 < "../$src"
   done
}

build() {
  cd "$pkgname-$pkgver"

  ./configure \
    --sysconfdir=/etc \
    --with-xz \
    --with-zlib \
    --with-zstd \
    --with-openssl

  make
}

check() {
  # As of kmod v20, the test suite needs to build some kernel modules, and thus
  # needs headers available in order to run. We depend on linux-headers, but
  # this is really only to try and make sure that *some* useable tree of kernel
  # headers exist. The first useable tree we find is good enough, as these
  # modules will never be loaded by tests.

  local kdirs=(/usr/lib/modules/*/build/Makefile)
  if [[ ! -f ${kdirs[0]} ]]; then
    printf '==> Unable to find kernel headers to build modules for tests\n' >&2
    return 1
  fi

  local kver kdir=${kdirs[0]%/Makefile}
  IFS=/ read _ _ _ kver _ <<<"$kdir"

  make -C "$pkgname-$pkgver" check KDIR="$kdir" KVER="$kver"
}

package() {
  make -C "$pkgname-$pkgver" DESTDIR="$pkgdir" install

  # extra directories
  install -dm755 "$pkgdir"/{etc,usr/lib}/{depmod,modprobe}.d

  for tool in {ins,ls,rm,dep}mod mod{probe,info}; do
    ln -s kmod "$pkgdir/usr/bin/$tool"
  done

  # install depmod.d file for search/ dir
  install -Dm644 "$srcdir/depmod-search.conf" "$pkgdir/usr/lib/depmod.d/search.conf"

  # hook
  install -Dm644 "$srcdir/depmod.hook" "$pkgdir/usr/share/libalpm/hooks/60-depmod.hook"
  install -Dm755 "$srcdir/depmod.script" "$pkgdir/usr/share/libalpm/scripts/depmod"
}

# vim: ft=sh syn=sh et
