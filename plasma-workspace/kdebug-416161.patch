From 1db6885605a90c2528febb3276225f068ad26667 Mon Sep 17 00:00:00 2001
From: Alexander Lohnau <alexander.lohnau@gmx.de>
Date: Sun, 28 Jun 2020 17:52:38 +0000
Subject: [PATCH] Update preferred browser when KSycoca changes

BUG: 416161
---
 applets/kicker/plugin/appentry.cpp              | 15 +++++++++++++++
 applets/kicker/plugin/appentry.h                |  2 ++
 applets/kicker/plugin/kastatsfavoritesmodel.cpp | 14 ++++++++++----
 3 files changed, 27 insertions(+), 4 deletions(-)

diff --git a/applets/kicker/plugin/appentry.cpp b/applets/kicker/plugin/appentry.cpp
index cd186d7c3..42d8d04f5 100644
--- a/applets/kicker/plugin/appentry.cpp
+++ b/applets/kicker/plugin/appentry.cpp
@@ -64,6 +64,15 @@ AppEntry::AppEntry(AbstractModel *owner, const QString &id) : AbstractEntry(owne
     if (url.scheme() == QLatin1String("preferred")) {
         m_service = defaultAppByName(url.host());
         m_id = id;
+        m_con = QObject::connect(KSycoca::self(), QOverload<>::of(&KSycoca::databaseChanged), owner, [this, owner, id](){
+            KSharedConfig::openConfig()->reparseConfiguration();
+            m_service = defaultAppByName(QUrl(id).host());
+            if (m_service) {
+                init((NameFormat)owner->rootModel()->property("appNameFormat").toInt());
+                m_icon = QIcon();
+                Q_EMIT owner->layoutChanged();
+            }
+        });
     } else {
         m_service = KService::serviceByStorageId(id);
     }
@@ -275,6 +284,12 @@ KService::Ptr AppEntry::defaultAppByName(const QString& name)
     return KService::Ptr();
 }
 
+AppEntry::~AppEntry() {
+    if (m_con){
+        QObject::disconnect(m_con);
+    }
+}
+
 AppGroupEntry::AppGroupEntry(AppsModel *parentModel, KServiceGroup::Ptr group,
     bool paginate, int pageSize, bool flat, bool sorted, bool separators, int appNameFormat) : AbstractGroupEntry(parentModel),
     m_group(group)
diff --git a/applets/kicker/plugin/appentry.h b/applets/kicker/plugin/appentry.h
index 48543d45f..0f2b1e8fe 100644
--- a/applets/kicker/plugin/appentry.h
+++ b/applets/kicker/plugin/appentry.h
@@ -40,6 +40,7 @@ class AppEntry : public AbstractEntry
 
         explicit AppEntry(AbstractModel *owner, KService::Ptr service, NameFormat nameFormat);
         explicit AppEntry(AbstractModel *owner, const QString &id);
+        ~AppEntry() override;
 
         EntryType type() const override { return RunnableType; }
 
@@ -72,6 +73,7 @@ class AppEntry : public AbstractEntry
         mutable QIcon m_icon;
         KService::Ptr m_service;
         static MenuEntryEditor *m_menuEntryEditor;
+        QMetaObject::Connection m_con;
 };
 
 class AppGroupEntry : public AbstractGroupEntry
diff --git a/applets/kicker/plugin/kastatsfavoritesmodel.cpp b/applets/kicker/plugin/kastatsfavoritesmodel.cpp
index 3474faefa..b9c59ab28 100644
--- a/applets/kicker/plugin/kastatsfavoritesmodel.cpp
+++ b/applets/kicker/plugin/kastatsfavoritesmodel.cpp
@@ -379,10 +379,16 @@ public:
         }
 
         const QString id = data(index(row, 0), Kicker::UrlRole).toString();
-
-        return m_itemEntries.contains(id)
-                    ? m_itemEntries[id]->run(actionId, argument)
-                    : false;
+        if (m_itemEntries.contains(id)) {
+            return m_itemEntries[id]->run(actionId, argument);
+        }
+        // Entries with preferred:// can be changed by the user, BUG: 416161
+        // then the list of entries could be out of sync
+        const auto entry = m_itemEntries[m_items[row].value()];
+        if (QUrl(entry->id()).scheme() == QLatin1String("preferred")) {
+           return entry->run(actionId, argument);
+        }
+        return false;
     }
 
     void move(int from, int to)
-- 
GitLab

